#!/usr/bin/env bash
#
# Copyright 2013 Victor Penso
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

# exit if an uninitialised variable is used
#set -o nonunset
# exit of statement returns a non-true return value
#set -o errexit

VERSION=0.2

# Filename of this script
SCRIPT=${0##*/}

# Help text for this script
HELP=\
"Usage: 

  $SCRIPT [-rsh] [user@hostname] [command] 

Execute a command on a remote node. Uses a ./ssh_config in
the working directory by default if it exists. If now 
command is passed as argument /bin/bash will be spawned.

Options:
  -r,--root
    Login as root.
  -s,--sudo
    Remote execute a command with Sudo.
  -A
    Enables forwarding of the authentication agent connection.
  -h,--help
    Show this information.
  -d,--debug
    Enable debug messages."

# enable line numbers for debug output
if [ "$_DEBUG" = "true" ] ; then
  export PS4='(${BASH_SOURCE}:${LINENO}):${FUNCNAME[0]}-[${SHLVL},${BASH_SUBSHELL},$?] '
fi

function _debug() {
  if [ "$_DEBUG" = "true" ]; then
    echo 1>&2 "Debug: $@"
  fi
}

function _error() {
  echo 1>&2 "Error: $@"
  echo "See \`$SCRIPT --help\` for usage."
}

sudo=
options=
# Parse the command line options
ARGS=$(getopt -o hsrdA -l "help,sudo,root,debug" -- "$@")
eval set -- "$ARGS"
while true; do
  case "$1" in
    -h|--help)
      echo "$HELP"
      exit 0
      ;;
    -s|--sudo)
      sudo="sudo "
      shift
      ;;
    -r|--root)
      options="-l root $options"
      shift
      ;;
    -d|--debug)
      _DEBUG=true
      shift
      ;;
    -A)
      options="-A $options"
      shift
      ;;
    --) shift; break ;;
    *) break ;;
  esac
done

if [ -e "$PWD/ssh_config" ]
then
  options="-F $PWD/ssh_config $options"
fi

host=instance
command=
if [ $# -eq 0 ] ; then
  command="/usr/bin/env bash"
else
  command="$@"
fi


command="$sudo$command"
_debug "Execute command [ssh -gt $options $host \"$command\"]"
ssh -A -gt $options $host "$command" 2>/dev/null
if [ $? -ne 0 ]
then
  _error "Host [$host] failed to execute [$@]!"
fi

exit 0


